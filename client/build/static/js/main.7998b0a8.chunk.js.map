{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["summonersNames","ligas","App","transform","tier","ordenacion","a","b","name","toLowerCase","charCodeAt","transformPromo","str","separate","split","map","transformGame","letter","CloseCircleTwoTone","twoToneColor","CheckCircleTwoTone","QuestionCircleOutlined","columns","title","dataIndex","key","render","text","record","src","iconId","href","target","level","sorter","points","promo","progress","summon1","summon2","num1","indexOf","league","num2","console","log","wins","losses","useState","summoners","setSummoners","useEffect","allSumms","i","length","fetch","then","res","json","summ","push","sort","loadSummoners","dataSource","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oTAKMA,EAAiB,CACrB,gBAAiB,gBAAiB,WAAY,eAAe,mBAAoB,WAAY,UAC7F,eAAgB,QAAS,mBAAoB,gBAAiB,iBAAkB,kBAE5EC,EAAQ,CAAC,aAAc,SAAU,UAAW,WAAY,OAAQ,SAAU,SAAU,OAAQ,YAuGnFC,EArGH,WACV,IAAMC,EAAY,SAAAC,GAChB,MAAW,KAARA,EAAoB,EACZ,MAARA,EAAqB,EACb,OAARA,EAAsB,EACd,MAARA,EAAqB,OAAxB,GAEIC,EAAa,SAACC,EAAGC,GAAJ,OAAYD,EAAEE,KAAKC,cAAcC,WAAW,GAAK,IAAOH,EAAEC,KAAKC,cAAcC,WAAW,GAAK,KAE1GC,EAAiB,SAAAC,GACrB,IAAMC,EAAWD,EAAIE,MAAM,IAC3B,OAAQ,iCACLD,EAASE,KAAI,SAAAT,GAAC,OAAEU,EAAcV,MADzB,WAIJU,EAAgB,SAAAC,GACpB,MAAW,KAARA,EAAoB,cAACC,EAAA,EAAD,CAAoBC,aAAe,YAC/C,KAARF,EAAoB,cAACG,EAAA,EAAD,CAAqBD,aAAe,YAChD,KAARF,EAAoB,cAACI,EAAA,EAAD,SAAvB,GAEIC,EAAU,CACd,CACEC,MAAO,SACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,EAAMC,GAAP,OACN,iCAAM,cAAC,IAAD,CAAQC,IAAG,4EAAyED,EAAOE,OAAhF,yCAAjB,IAAiJ,mBAAGC,KAAI,8CAAyCJ,GAAQK,OAAS,SAAjE,SAA2EL,IAA5N,IAAuOC,EAAOK,MAA9O,QAEFC,OAAQ,SAAC5B,EAAGC,GAAJ,OAAWD,EAAEE,KAAKC,cAAcC,WAAW,GAAK,IAAOH,EAAEC,KAAKC,cAAcC,WAAW,GAAK,MAGtG,CACEa,MAAO,OACPC,UAAW,SACXC,IAAK,SACLC,OAAQ,SAACC,EAAMC,GAAP,OACN,+BACW,YAARD,EACC,iCACE,cAAC,IAAD,CAAQE,IAAG,0DAAuDF,EAAKlB,cAA5D,YAA6EN,EAAUyB,EAAOxB,MAA9F,gCACVuB,EAFH,IAEUC,EAAOxB,KAFjB,KAEyBwB,EAAOO,OAFhC,QAE6CP,EAAOQ,MAAQzB,EAAeiB,EAAOQ,MAAMC,UAAW,MAGnG,iCACE,cAAC,IAAD,CAAQR,IAAG,sFACVF,QAKTO,OAAQ,SAACI,EAASC,GAChB,IAAIC,EAA+E,KAArC,IAAjC,EAAEvC,EAAMwC,QAAQH,EAAQI,SAAcvC,EAAUmC,EAAQlC,OAAS,GAAWkC,EAAQH,QAAU,EACvGQ,EAA+E,KAArC,IAAjC,EAAE1C,EAAMwC,QAAQF,EAAQG,SAAcvC,EAAUoC,EAAQnC,OAAS,GAAWmC,EAAQJ,QAAU,EAE3G,OADAS,QAAQC,IAAIL,EAAMF,EAAQ9B,MACnBmC,EAAOH,IAGlB,CACEjB,MAAO,YACPC,UAAW,OACXC,IAAK,OACLS,OAAO,SAAC5B,EAAEC,GAAH,OAAUA,EAAEuC,KAAOxC,EAAEwC,OAE9B,CACEvB,MAAO,WACPC,UAAW,SACXC,IAAK,SACLS,OAAO,SAAC5B,EAAEC,GAAH,OAAUA,EAAEwC,OAASzC,EAAEyC,SAEhC,CACExB,MAAO,WACPG,OAAQ,SAACC,EAAMC,GAAP,OACN,iCAAQA,EAAOkB,MAAMlB,EAAOmB,OAAOnB,EAAOkB,OAAU,EAApD,UAxEU,EA6EkBE,mBAAS,IA7E3B,mBA6ETC,EA7ES,KA6EEC,EA7EF,KA2FhB,OAbAC,qBAAU,WAAM,4CACd,gCAAA7C,EAAA,sDACM8C,EAAW,GACNC,EAAI,EAFf,YAEkBA,EAAIrD,EAAesD,QAFrC,iCAGwBC,MAAM,QAAD,OAASvD,EAAeqD,KAAMG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAH3E,OAGUC,EAHV,OAIIP,EAASQ,KAAKD,GAJlB,OAE6CN,IAF7C,uBAMED,EAAWA,EAASS,KAAKxD,GACzBuC,QAAQC,IAAIO,GACZF,EAAaE,GARf,6CADc,uBAAC,WAAD,wBAWdU,KACC,IAED,gCACE,mDAEG,cAAC,IAAD,CAAOxC,QAASA,EAASyC,WAAYd,QC9F/Be,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS9C,OACP,cAAC,IAAM+C,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.7998b0a8.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport './App.css';\nimport { Table, Avatar } from 'antd';\nimport 'antd/dist/antd.css';\nimport { CheckCircleTwoTone , CloseCircleTwoTone, QuestionCircleOutlined} from '@ant-design/icons';\nconst summonersNames = [\n  \"R3X PamelaChu\", \"R3X pORNNhub \", \"Svrlsvpb\", \"mitulaEZREAL\",\"R3X VirginMaster\", \"Calyscxn\", \"Maz3pin\",\n  \"R3X DJ Cobra\", \"egnqs\", \"AlejosDeCarglass\", \"R3X peloypito\", \"R3X SocioDeVOX\", \"labandaestabo3\"\n]\nconst ligas = [\"CHALLENGER\", \"MASTER\", \"DIAMOND\", \"PLATINUM\", \"GOLD\", \"SILVER\", \"BRONZE\", \"IRON\", \"UNRANKED\"]\n\nconst App = () => {\n  const transform = tier => {\n    if(tier == \"I\") return 1\n    if(tier == \"II\") return 2\n    if(tier == \"III\") return 3\n    if(tier == \"IV\") return 4\n  }\n  const ordenacion = (a, b) => ((a.name.toLowerCase().charCodeAt(0) - 97) - (b.name.toLowerCase().charCodeAt(0) - 97))\n\n  const transformPromo = str => {\n    const separate = str.split(\"\")\n    return (<span>\n      {separate.map(a=>transformGame(a))}&nbsp;\n    </span>)\n  }\n  const transformGame = letter => {\n    if(letter==\"L\") return <CloseCircleTwoTone twoToneColor = \"#FE2E2E\"/>\n    if(letter==\"W\") return <CheckCircleTwoTone  twoToneColor = \"#52c41a\"/>\n    if(letter==\"N\") return <QuestionCircleOutlined />\n  }\n  const columns = [\n    {\n      title: 'Nombre',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text, record) => (\n        <span><Avatar src = {`https://opgg-static.akamaized.net/images/profile_icons/profileIcon${record.iconId}.jpg?image=q_auto:best&v=1518361200`} /> <a href={`https://euw.op.gg/summoner/userName=${text}`} target = \"_blank\">{text}</a> {record.level} </span>\n      ),\n      sorter: (a, b) =>((a.name.toLowerCase().charCodeAt(0) - 97) - (b.name.toLowerCase().charCodeAt(0) - 97))\n    },\n    //\n    {\n      title: 'Liga',\n      dataIndex: 'league',\n      key: 'league',\n      render: (text, record) => (\n        <span>\n          {text != \"UNRANKED\" ?\n            <span>\n              <Avatar src = {`https://opgg-static.akamaized.net/images/medals/${text.toLowerCase()}_${transform(record.tier)}.png?image=q_auto:best&v=1`} /> \n              {text} {record.tier} ({record.points}pts) {record.promo ? transformPromo(record.promo.progress): \"\"}\n            </span>\n            : \n            <span>\n              <Avatar src = {`https://opgg-static.akamaized.net/images/medals/default.png?image=q_auto:best&v=1`} /> \n              {text}\n            </span>\n          }\n        </span>\n      ),\n      sorter: (summon1, summon2) => {\n        let num1 = ((8-ligas.indexOf(summon1.league))*10 - transform(summon1.tier) || 0) * 100 + summon1.points || 0\n        let num2 = ((8-ligas.indexOf(summon2.league))*10 - transform(summon2.tier) || 0) * 100 + summon2.points || 0\n        console.log(num1, summon1.name)\n        return num2 - num1\n      }\n    },\n    {\n      title: 'Victorias',\n      dataIndex: 'wins',\n      key: 'wins',\n      sorter:(a,b) => (b.wins - a.wins)\n    },\n    {\n      title: 'Derrotas',\n      dataIndex: 'losses',\n      key: 'losses',\n      sorter:(a,b) => (b.losses - a.losses)\n    },\n    {\n      title: \"Win Rate\",\n      render: (text, record) => (\n        <span>{(record.wins/(record.losses+record.wins)) || 0}%</span>\n      )\n    }\n  ];\n\n  const [summoners, setSummoners] = useState([]);\n  useEffect(() => {\n    async function loadSummoners(){\n      let allSumms = []\n      for (let i = 0; i < summonersNames.length; i++) {\n        const summ =  await fetch(`/get/${summonersNames[i]}`).then(res => res.json())\n        allSumms.push(summ)\n      }\n      allSumms = allSumms.sort(ordenacion)\n      console.log(allSumms)\n      setSummoners(allSumms)\n    }\n    loadSummoners()\n  }, [])\n  return (\n    <div>\n      <h1>SoloQ Challenge 2</h1>\n      {\n         <Table columns={columns} dataSource={summoners}  />\n      }\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}